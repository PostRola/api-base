### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AppError {
  errors: [Error!]!
}

type AuthToken {
  duration: Int!
  generatedAt: DateTime!
  id: String!
  type: String!
}

union AuthTokenReponse = AppError | AuthToken

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Error {
  code: String!
  message: String!
}

type Mutation {
  approveTag(approved: Boolean!, tagId: ID!): Tag!
  authenticateUser(input: TokenInput!): AuthTokenReponse!
  createPublication(input: NewPublication!): NewPublicationResponse!
  createTag(tag: TagInput!): TagResponse!
  forgotPassword(username: String!): Boolean!
  resetPassword(code: String!, password: String!): Boolean!
  updateTag(tag: TagInput!): Tag!
}

input NewPublication {
  firstUser: UserInput
  fromEmail: String!
  name: String!
  publicUrl: String!
}

union NewPublicationResponse = AppError | Publication

type Publication {
  fromEmail: String!
  id: ID!
  name: String!
  publicUrl: String!
}

type Query {
  getPublications: [Publication!]!
  getTags(approved: Boolean!, search: String, skip: Int!, top: Int!): [Tag!]!
}

type Tag {
  approved: Boolean!
  description: String!
  id: ID!
  name: String!
  slug: String!
}

input TagInput {
  description: String
  name: String!
  slug: String
}

union TagResponse = AppError | Tag

input TokenInput {
  password: String!
  username: String!
}

"""New User Input"""
input UserInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
}
